["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ajax.core","~:imports",null,"~:requires",["^ ","~$json","~$ajax.json","~$ajax.formats","^;","~$pr","~$ajax.protocols","~$i","~$ajax.interceptors","~$ajax.xml-http-request","^?","~$u","~$ajax.util","~$ajax.transit","^A","^:","^:","~$ajax.url","^B","^>","^>","~$ajax.ring","^C","~$ring","^C","~$ajax.easy","^E","~$easy","^E","~$simple","~$ajax.simple","^H","^H","^=","^=","^@","^@","~$transit","^A","~$str","~$clojure.string","^K","^K","~$ajax.xhrio","^L","~$url","^B","~$f","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$PUT",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","~:line",76,"~:column",13,"~:end-line",76,"~:end-column",16,"~:arglists",["~#list",["~$quote",["^Z",[["~$uri","~$&","~$opts"]]]]],"~:doc","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","~:top-fn",["^ ","~:variadic?",true,"~:max-fixed-arity",1,"~:method-params",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"~:arglists-meta",["^Z",[null]]]],"^5","~$ajax.core/PUT","^T","resources/public/js/heat/ajax/core.cljc","^X",16,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"~:protocol-impl",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",76,"~:ret-tag","~$any","^W",76,"^15",1,"~:fn-var",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$POST",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",75,"^V",13,"^W",75,"^X",17,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/POST","^T","resources/public/js/heat/ajax/core.cljc","^X",17,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",75,"^1:","^1;","^W",75,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$PURGE",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",81,"^V",13,"^W",81,"^X",18,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/PURGE","^T","resources/public/js/heat/ajax/core.cljc","^X",18,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",81,"^1:","^1;","^W",81,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$transit-request-format",["^ ","^5","~$ajax.core/transit-request-format","^T","resources/public/js/heat/ajax/core.cljc","^U",41,"^V",1,"^W",41,"^X",28,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",41,"^V",6,"^W",41,"^X",28]],"~$json-request-format",["^ ","^5","~$ajax.core/json-request-format","^T","resources/public/js/heat/ajax/core.cljc","^U",38,"^V",1,"^W",38,"^X",25,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",38,"^V",6,"^W",38,"^X",25],"~:tag","~$function"],"~$success?",["^ ","^5","~$ajax.core/success?","^T","resources/public/js/heat/ajax/core.cljc","^U",53,"^V",1,"^W",53,"^X",14,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",53,"^V",6,"^W",53,"^X",14]],"~$raw-response-format",["^ ","^5","~$ajax.core/raw-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",51,"^V",1,"^W",51,"^X",25,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",51,"^V",6,"^W",51,"^X",25]],"~$to-interceptor",["^ ","^5","~$ajax.core/to-interceptor","^T","resources/public/js/heat/ajax/core.cljc","^U",30,"^V",1,"^W",30,"^X",20,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",30,"^V",6,"^W",30,"^X",20]],"~$default-formats",["^ ","^5","~$ajax.core/default-formats","^T","resources/public/js/heat/ajax/core.cljc","^U",63,"^V",1,"^W",63,"^X",21,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",63,"^V",6,"^W",63,"^X",21],"^1E","^1;"],"~$text-response-format",["^ ","^5","~$ajax.core/text-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",49,"^V",1,"^W",49,"^X",26,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",49,"^V",6,"^W",49,"^X",26]],"~$DELETE",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",77,"^V",13,"^W",77,"^X",19,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/DELETE","^T","resources/public/js/heat/ajax/core.cljc","^X",19,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",77,"^1:","^1;","^W",77,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$json-response-format",["^ ","^5","~$ajax.core/json-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",39,"^V",1,"^W",39,"^X",26,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",39,"^V",6,"^W",39,"^X",26],"^1E","^1F"],"~$abort",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",32,"^V",7,"^W",32,"^X",12,"^Y",["^Z",["^[",["^Z",[["~$this"]]]]]],"^5","~$ajax.core/abort","^T","resources/public/js/heat/ajax/core.cljc","^X",12,"^16",["^Z",[["^1V"]]],"^19",null,"^17",["^Z",[null,null]],"^V",1,"^14",false,"^U",32,"^1:","^1;","^W",32,"^15",1,"^1<",true,"^Y",["^Z",["^[",["^Z",[["^1V"]]]]]],"~$ajax-request",["^ ","^5","~$ajax.core/ajax-request","^T","resources/public/js/heat/ajax/core.cljc","^U",59,"^V",1,"^W",59,"^X",18,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",59,"^V",6,"^W",59,"^X",18]],"~$default-interceptors",["^ ","^5","~$ajax.core/default-interceptors","^T","resources/public/js/heat/ajax/core.cljc","^U",57,"^V",1,"^W",57,"^X",26,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",57,"^V",6,"^W",57,"^X",26],"^1E","^1;"],"~$url-request-format",["^ ","^5","~$ajax.core/url-request-format","^T","resources/public/js/heat/ajax/core.cljc","^U",46,"^V",1,"^W",46,"^X",24,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",46,"^V",6,"^W",46,"^X",24]],"~$GET",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",73,"^V",13,"^W",73,"^X",16,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/GET","^T","resources/public/js/heat/ajax/core.cljc","^X",16,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",73,"^1:","^1;","^W",73,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$HEAD",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",74,"^V",13,"^W",74,"^X",17,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/HEAD","^T","resources/public/js/heat/ajax/core.cljc","^X",17,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",74,"^1:","^1;","^W",74,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$ring-response-format",["^ ","^5","~$ajax.core/ring-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",44,"^V",1,"^W",44,"^X",26,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",44,"^V",6,"^W",44,"^X",26]],"~$TRACE",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",79,"^V",13,"^W",79,"^X",18,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/TRACE","^T","resources/public/js/heat/ajax/core.cljc","^X",18,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",79,"^1:","^1;","^W",79,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$transit-response-format",["^ ","^5","~$ajax.core/transit-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",42,"^V",1,"^W",42,"^X",29,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",42,"^V",6,"^W",42,"^X",29]],"~$detect-response-format",["^ ","^5","~$ajax.core/detect-response-format","^T","resources/public/js/heat/ajax/core.cljc","^U",71,"^V",1,"^W",71,"^X",28,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",71,"^V",6,"^W",71,"^X",28]],"~$text-request-format",["^ ","^5","~$ajax.core/text-request-format","^T","resources/public/js/heat/ajax/core.cljc","^U",48,"^V",1,"^W",48,"^X",25,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",48,"^V",6,"^W",48,"^X",25]],"~$PATCH",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",80,"^V",13,"^W",80,"^X",18,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/PATCH","^T","resources/public/js/heat/ajax/core.cljc","^X",18,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",80,"^1:","^1;","^W",80,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"],"~$OPTIONS",["^ ","^R",null,"^S",["^ ","^T","/home/ru/clojure/simpro-scene/resources/public/js/heat/ajax/core.cljc","^U",78,"^V",13,"^W",78,"^X",20,"^Y",["^Z",["^[",["^Z",[["^10","~$&","^11"]]]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request","^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]]],"^5","~$ajax.core/OPTIONS","^T","resources/public/js/heat/ajax/core.cljc","^X",20,"^13",["^ ","^14",true,"^15",1,"^16",[["^Z",["^10","^11"]]],"^Y",["^Z",[["^10","~$&","^11"]]],"^17",["^Z",[null]]],"^16",[["^Z",["^10","^11"]]],"^19",null,"^17",["^Z",[null]],"^V",1,"^14",true,"^U",78,"^1:","^1;","^W",78,"^15",1,"^1<",true,"^Y",["^Z",[["^10","~$&","^11"]]],"^12","accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$m","~$ajax.macros","^2F","^2F"],"^12","This is the documented API for cljs-ajax. The only functions not\n   exposed here that are documented are the deprecated features."]