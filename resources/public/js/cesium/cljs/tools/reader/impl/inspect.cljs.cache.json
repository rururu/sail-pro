["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs.tools.reader.impl.inspect","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$inspect*",["^ ","^5","~$cljs.tools.reader.impl.inspect/inspect*","~:file","resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","~:line",37,"~:column",1,"~:end-line",37,"~:end-column",19,"~:meta",["^ ","^>","/home/ru/clojure/sail-pro/resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^?",37,"^@",11,"^A",37,"^B",19],"~:tag","~$cljs.core/MultiFn"],"~$inspect*-col",["^ ","~:protocol-inline",null,"^C",["^ ","^>","/home/ru/clojure/sail-pro/resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^?",13,"^@",8,"^A",13,"^B",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^J",[["~$truncate","~$col","~$start","~$end"]]]]]],"^H",true,"^5","~$cljs.tools.reader.impl.inspect/inspect*-col","^>","resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^B",20,"~:method-params",["^J",[["^L","^M","^N","^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^@",1,"~:variadic?",false,"^?",13,"~:ret-tag","~$string","^A",13,"~:max-fixed-arity",4,"~:fn-var",true,"^I",["^J",["^K",["^J",[["^L","^M","^N","^O"]]]]]],"~$dispatch-inspect",["^ ","^G",null,"^C",["^ ","^>","/home/ru/clojure/sail-pro/resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^?",21,"^@",8,"^A",21,"^B",24,"^H",true,"^I",["^J",["^K",["^J",[["~$_","~$x"]]]]]],"^H",true,"^5","~$cljs.tools.reader.impl.inspect/dispatch-inspect","^>","resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^B",24,"^Q",["^J",[["~$_","~$x"]]],"^R",null,"^S",["^J",[null,null]],"^@",1,"^T",false,"^?",21,"^U",["^4",["~$any","~$cljs.core/Keyword","~$clj-nil"]],"^A",21,"^W",2,"^X",true,"^I",["^J",["^K",["^J",[["~$_","~$x"]]]]]],"~$inspect",["^ ","^G",null,"^C",["^ ","^>","/home/ru/clojure/sail-pro/resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^?",83,"^@",7,"^A",83,"^B",14,"^I",["^J",["^K",["^J",[["~$x"],["^L","~$x"]]]]],"~:doc","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection.","~:top-fn",["^ ","^T",false,"~:fixed-arity",2,"^W",2,"^Q",[["~$x"],["^L","~$x"]],"^I",["^J",[["~$x"],["^L","~$x"]]],"^S",["^J",[null,null]]]],"^5","~$cljs.tools.reader.impl.inspect/inspect","^>","resources/public/js/cesium/cljs/tools/reader/impl/inspect.cljs","^B",14,"^14",["^ ","^T",false,"^15",2,"^W",2,"^Q",[["~$x"],["^L","~$x"]],"^I",["^J",[["~$x"],["^L","~$x"]]],"^S",["^J",[null,null]]],"^Q",[["~$x"],["^L","~$x"]],"^R",null,"^15",2,"^S",["^J",[null,null]],"^@",1,"^T",false,"~:methods",[["^ ","^15",1,"^T",false,"^D","^["],["^ ","^15",2,"^T",false,"^D","^["]],"^?",83,"^A",83,"^W",2,"^X",true,"^I",["^J",[["~$x"],["^L","~$x"]]],"^13","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:default","~:string","~:vector","~:strable","~:list","~:nil","~:set","~:hierarchy","~:map"]],"~:order",["^1A","^1=","^1?","^1>","^1@","^1D","^1B","^1<","^1C"]],"^13",null,"~:as-aliases",["^ "]]