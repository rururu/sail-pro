; Fri Feb 17 11:27:15 EET 2023
; 
;+ (version "3.5")
;+ (build "Build 663")

([VRDashboardClient_Class0] of  WorkingPrograms

	(butt-load-progs "Load Programs/protege.core/ldns")
	(cloPrograms
		[RuleEngine_Class30000]
		[Cezium_Class40000]
		[Cezium_Class30043]
		[Cezium_Class30026]
		[CeziumEngineLight_Class40011]
		[Example_Class10000]
		[GeoNamesWikipedia_Class0]
		[VRDashboardClient_Class1])
	(title "VR Programs"))

([VRDashboardClient_Class1] of  CloProgram

	(cloFunctions
		[VRDashboardClient_Class60003]
		[VRDashboardClient_Class30019]
		[VRDashboardClient_Class290001]
		[VRDashboardClient_Class280000]
		[VRDashboardClient_Class30006]
		[VRDashboardClient_Class170002]
		[VRDashboardClient_Class90001]
		[VRDashboardClient_Class120007]
		[VRDashboardClient_Class120003]
		[VRDashboardClient_Class130002]
		[VRDashboardClient_Class140000]
		[VRDashboardClient_Class150024]
		[VRDashboardClient_Class70000]
		[VRDashboardClient_Class150002]
		[VRDashboardClient_Class90005]
		[VRDashboardClient_Class160001]
		[VRDashboardClient_Class200006]
		[VRDashboardClient_Class200008]
		[VRDashboardClient_Class230057]
		[VRDashboardClient_Class240720]
		[VRDashboardClient_Class200007]
		[VRDashboardClient_Class280012]
		[VRDashboardClient_Class290010]
		[VRDashboardClient_Class190005]
		[VRDashboardClient_Class100083]
		[VRDashboardClient_Class100098]
		[VRDashboardClient_Class80001]
		[VRDashboardClient_Class240001]
		[VRDashboardClient_Class290002]
		[VRDashboardClient_Class170000])
	(cloNamespace [VRDashboardClient_Class2])
	(cloVars
		[VRDashboardClient_Class20000]
		[VRDashboardClient_Class290011]
		[VRDashboardClient_Class30001]
		[VRDashboardClient_Class30059]
		[VRDashboardClient_Class90000]
		[VRDashboardClient_Class210000]
		[VRDashboardClient_Class250016]
		[VRDashboardClient_Class20001]
		[VRDashboardClient_Class40000]
		[VRDashboardClient_Class260000])
	(title "VR Dashboard Client"))

([VRDashboardClient_Class10000] of  CloFuncall

	(source "(slurp RACES-URL)"))

([VRDashboardClient_Class100000] of  Rule

	(lhs "(CZMLGenerator)\n(MapObEvent0 status \"REMOVED\"\n	label ?lab)\n?czs (CZMLSpan object ?lab)")
	(rhs "(retract ?czs)\n(println \"NavOb off map:\" ?lab)")
	(salience 0)
	(title "vr:NavOb off Map"))

([VRDashboardClient_Class100001] of  NavOb

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Spike")
	(latitude "0 0")
	(longitude "0 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtp.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class100003] of  CloFuncall

	(source "(invoke-later (ask-boat-name))"))

([VRDashboardClient_Class100004] of  CloFuncall

	(source "(ru.rules/pp 'VRDashboardControl)"))

([VRDashboardClient_Class10001] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [VRDashboardClient_Class0])
	(%3ACREATION-TIMESTAMP "2021.04.21 19:35:22.278 MSK")
	(%3ACREATOR "ru"))

([VRDashboardClient_Class10002] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [VRDashboardClient_Class30073])
	(%3ACREATION-TIMESTAMP "2021.04.21 19:35:34.910 MSK")
	(%3ACREATOR "ru"))

([VRDashboardClient_Class10003] of  CloProgram

	(cloFunctions [VRDashboardClient_Class240060])
	(cloNamespace [VRDashboardClient_Class240061])
	(title "CW"))

([VRDashboardClient_Class10005] of  CZMLGenerator

	(delay 4)
	(visibility 16.0))

([VRDashboardClient_Class100083] of  CloFunction

	(source "(let [uid (nmp 'userId)\n      [lat lon] (nmp 'pos)\n      sog (nmp 'sog)\n      cog (nmp 'cog)\n      nam (nmp 'name)\n      lab (or nam (str uid))\n      sog (round-sog sog)\n      cog (float (/ cog 10))\n      dis (MapOb/distanceNM lat lon (.getLatitude obm) (.getLongitude obm))]\n  (if (< dis vis)\n    [lab lat lon sog cog dis]))")
	(title "neighbor [nmp obm vis]"))

([VRDashboardClient_Class100084] of  CloFuncall

	(source "(ru.rules/sp :all)"))

([VRDashboardClient_Class100098] of  CloFunction

	(source "(if-let [obm (OMT/getMapOb onb)]\n  (if (not (empty? @FLEET))\n    (let [nbs (map #(neighbor % obm vis) (vals @FLEET))\n           nbs (filter some? nbs)]\n      (def ONMAP (volatile! []))\n      (doseq [[lab lat lon sog cog dis] nbs]\n        ;;(println :NEIGHBOR lab (= lab \"FRIGATE\"))\n        (let [nbi (foc \"VRFleet\" \"label\" lab)\n               pat (fifos \"NavOb\" \"label\" \"neighbor\")\n               frg (fifos \"NavOb\" \"label\" \"frigate0\")]\n           (if (= lab \"FRIGATE\")\n             (do (ssv nbi \"url\" (sv frg \"url\"))\n               (ssv nbi \"description\" (sv frg \"description\")))\n             (do (ssv nbi \"url\" (sv pat \"url\"))\n               (ssv nbi \"description\" (sv pat \"description\"))))\n          (let [nbm (OMT/getOrAdd nbi)]\n            (.setLatitude nbm lat)\n            (.setLongitude nbm lon)\n            (.setCourse nbm (int cog))\n            (if (number? sog)\n              (.setSpeed nbm (double sog))))\n          (vswap! ONMAP conj lab))))))")
	(title "show-neighbors [onb vis]"))

([VRDashboardClient_Class110000] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Bylina")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtp.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class110001] of  CloFuncall

	(source "(invoke-later (load-races))"))

([VRDashboardClient_Class110003] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "russor")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtp.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class120000] of  CloFunction

	(source ";; Send the given string message out over the given socket\n(let [writer (io/writer socket)]\n      (.write writer msg)\n      (.flush writer))")
	(title "send [socket msg]"))

([VRDashboardClient_Class120001] of  CloFunction

	(source "(let [running (atom true)]\n    (future\n      (with-open [server-sock (ServerSocket. port)]\n        (while @running\n          (with-open [sock (.accept server-sock)]\n            (let [msg-in (receive sock)\n                  msg-out (handler msg-in)]\n              (send sock msg-out))))))\n    running)")
	(title "serve [port handler]"))

([VRDashboardClient_Class120003] of  CloFunction

	(source "(let [f (atom\n          {:b (fifos \"NavOb\" \"label\" \"Bylina\")\n            :v (fifos \"NavOb\" \"label\" \"Vela\")\n            :d (fifos \"NavOb\" \"label\" \"Diana\")\n            :a (fifos \"NavOb\" \"label\" \"Argo\")\n            :m (fifos \"NavOb\" \"label\" \"Mars\")})\n      rus (OMT/getMapOb \"russor\")\n      lar (.getLatitude rus)\n      lor (.getLongitude rus)\n      crr (.getCourse rus)\n      spr (.getSpeed rus)]\n  (doseq [k (keys @f)]\n    (swap! f assoc k (OMT/getOrAdd (@f k))))\n  (doseq [k (keys @f)]\n    (.setLatitude (@f k) (+ lar (srand 0.02)))\n    (.setLongitude (@f k) (+ lor (srand 0.02)))\n    (.setCourse (@f k) crr)\n    (.setSpeed (@f k) spr)))")
	(title "add-fleet []"))

([VRDashboardClient_Class120007] of  CloFunction

	(source "(- (rand (* d 2)) d)")
	(title "srand [d]"))

([VRDashboardClient_Class130000] of  Command

	(label "Create Nearby Boat")
	(scenario "clojuretab.ClojureTab invoke vr.dashcli create-nearby-boat"))

([VRDashboardClient_Class130001] of  Command

	(label "Add Aircraft Carrier")
	(scenario "clojuretab.ClojureTab invoke vr.dashcli add-aircraft-carrier"))

([VRDashboardClient_Class130002] of  CloFunction

	(source "(if-let [ac (fifos \"NavOb\" \"label\" \"CVN-69\")]\n  (let [acm (OMT/getOrAdd ac)\n        rus (OMT/getMapOb \"russor\")\n        lar (.getLatitude rus)\n        lor (.getLongitude rus)\n        lac (+ lar (srand 0.02))\n        loc (+ lor (srand 0.02))\n        crs (int (rand 360))]\n    (.setLatitude acm lac)\n    (.setLongitude acm loc)\n    (.setCourse acm crs)\n    (vswap! ART conj \"CVN-69\")\n    (if-let [h (fifos \"NavOb\" \"label\" \"h1\")]\n      (let [hm (OMT/getOrAdd h)]\n        (.setLatitude hm lac)\n        (.setLongitude hm loc)\n        (vswap! ART conj \"h1\")))\n    (if-let [i (fifos \"NavOb\" \"label\" \"i1\")]\n      (let [im (OMT/getOrAdd i)\n             icr (+ crs 180)\n             icr (if (> icr 360) (- icr 360) icr)] \n        (.setLatitude im lac)\n        (.setLongitude im loc)\n        (.setCourse im icr)\n        (vswap! ART conj \"i1\")))))")
	(title "add-aircraft-carrier []"))

([VRDashboardClient_Class140000] of  CloFunction

	(source "(let [mp (into {} hm)\n       clw (mp \"clsWidget\")\n       rce (first (.getSelection (.getSlotWidget clw (slt \"races\"))))\n       tpt (first (.split rce \"\\\\.\"))\n       tpt (+ 10000 (read-string tpt))]\n  (ssv inst \"selected-race\" rce))")
	(title "select-race [hm inst]"))

([VRDashboardClient_Class140002] of  CloFunction

	(source "(println \"INITIALIZING EXPERT SYSTEM\")\n(println \"1. Loading Clojure Programs...\")\n(if-let [wps (ClojureTab/findAnnotated (cls-instances \"WorkingPrograms\") nil)]\n  (loop [i 1 pins (svs wps \"cloPrograms\")]\n    (when (seq pins)\n      (println (str \" 1.\" i \" \" (sv (first pins) \"title\") \" = \" (ClojureTab/loadProgram (first pins)) ))\n      (recur (inc i) (rest pins)) ) )\n  (println \"  Annotated instance of WorkingPrograms not found!\"))\n(println \"2. Assign Telnet Port\")\n  (println \"Telnet Port\" (ClojureTab/invoke \"vr.dashcli\" \"ask-telnet-port\"))\n(println \"3. Starting Expert System.\")\n(if-let [run (ClojureTab/findAnnotated (cls-instances \"Run\") nil)]\n  (ClojureTab/invoke \"ru.rules\" \"run-engine\" run)\n  (println \"  Annotated instance of Run not found!\"))\n(println \"EXPERT SYSTEM INITIALIZED\")\n(.show *prj* (first (cls-instances \"VRDashboardControl\")))")
	(title "clojure-work []"))

([VRDashboardClient_Class150000] of  CloFuncall

	(source "(in-ns 'vr.dashcli)"))

([VRDashboardClient_Class150001] of  CloFuncall

	(source "(seq @FLEET)"))

([VRDashboardClient_Class150002] of  CloFunction

	(source "(let [onm (or @lps/ONBOARD\n                  (DisplayUtilities/editString nil \"Exsisting Boat Name\" \"\" nil))\n       nnm (DisplayUtilities/editString nil \"New Boat Name\" \"\" nil)]\n  (if (and (some? onm) (some? nnm))\n    (let [oi (fifos \"NavOb\" \"label\" onm)\n          ni (foc \"NavOb\" \"label\" nnm)\n          _ (ssv ni \"latitude\" \"0 0\")\n          _ (ssv ni \"longitude\" \"0 0\")\n          _ (ssv ni \"url\" (sv oi \"url\"))\n          _ (ssv ni \"description\" (sv oi \"description\"))\n          omo (OMT/getOrAdd oi)\n          nmo (OMT/getOrAdd ni)\n          crs (.getCourse omo)\n          [lat lon] (Util/relPos (.getLatitude omo) (.getLongitude omo) crs 0.1)]\n      (.setLatitude nmo lat)\n      (.setLongitude nmo lon)\n      (.setCourse nmo crs)\n      (.setSpeed nmo (.getSpeed omo))\n      (vswap! ONMAP conj nnm))))")
	(title "create-nearby-boat []"))

([VRDashboardClient_Class150024] of  CloFunction

	(source "(let [vof (keyword (clojure.string/lower-case vof))]\n  (or (not= vel (ops :view-elevation))\n       (not= vof (ops :view-offset))\n       (not= vpt (ops :view-post))))")
	(title "diff-view [ops vel vof vpt]"))

([VRDashboardClient_Class160000] of  BBXWiki

	(bbx [VRDashboardClient_Class170001])
	(button-bbx "submit/wiki.gis/submit-bbx")
	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(language English-en)
	(max-responses 40))

([VRDashboardClient_Class160001] of  CloFunction

	(source "(.show *prj* (first (cls-instances \"VRDashboardControl\")))")
	(title "show-controls []"))

([VRDashboardClient_Class170000] of  CloFunction

	(source "(let [cti (first (cls-instances \"VRDashboardControl\"))\n      nmi (first (cls-instances \"NMEAData\"))\n      obj (sv nmi \"object\")\n      rce (sv cti \"selected-race\")]\n  (if (not (rr/confirm (str \"Old race \" rce \" and boat \\\"\" (sv obj \"label\") \"\\\"?\")))\n    (let [ans (DisplayUtilities/editString nil \"Input your boat name\" (sv obj \"label\") nil)]\n      (if-let [ins (fifos \"NavOb\" \"label\" ans)]\n        (do (ssv cti \"onboard\" ans)\n          (ssv nmi \"object\" ins))\n        (if (rr/confirm (str \"Create boat \\\"\" ans \"\\\"?\"))\n          (let [crd (DisplayUtilities/editString nil \"Input boat coordinates\" \"60 0 30 0\" nil)\n                 [lad lam lod lom] (.split crd \" \")\n                 lat (str lad \" \" lam)\n                 lon (str lod \" \" lom)\n                 rus (fifos \"NavOb\" \"label\" \"russor\")\n                 ins (.shallowCopy rus *kb* nil)]\n             (println :NEW-BOAT ans lat lon)\n             (ssv ins \"label\" ans)\n             (ssv ins \"latitude\" lat)\n             (ssv ins \"longitude\" lon)\n             (ssv cti \"onboard\" ans)\n             (ssv nmi \"object\" ins))))\n      (if (rr/confirm \"Select new race?\")\n        (load-races)))))")
	(title "ask-race-and-boat-name []"))

([VRDashboardClient_Class170001] of  BBX

	(title "Current")
	(wsen -59.750114 -51.427593 -59.41678 -51.094257))

([VRDashboardClient_Class170002] of  CloFunction

	(source "(let [[tim1 & _] ndata\n       [tim2 & _] odata]\n  (not= tim1 tim2))")
	(title "diff-time? [ndata odata]"))

([VRDashboardClient_Class180000] of  CloFuncall

	(source "(ru.rules/pp :all)"))

([VRDashboardClient_Class180004] of  NavOb

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "AI")
	(latitude "0 0")
	(longitude "0 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtp.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class190000] of  CloFuncall

	(source "(future (vr.dashcli/get-external-data (str \"NMEA_CACHE/\" \"477.7\" \"/GPRMC.txt\") vr.dashcli/GPRMC))"))

([VRDashboardClient_Class190005] of  CloFunction

	(source "(let [s (str sog)\n      s (str (.substring s 0 (dec (count s))) \".\" (last s))]\n  (read-string s))")
	(title "round-sog [sog]"))

([VRDashboardClient_Class2] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [light.pro.server :as lps]\n  [clj-json.core :as json]\n  [wiki.gis :as wig]\n  [light.cesium.core :as cz]\n  [clojure.java.shell :as shell]\n  [clojure.java.io :as io]\n  [ru.rules :as rr])\n(:import\n  ru.igis.omtab.OMT\n  ru.igis.omtab.MapOb\n  ru.igis.omtab.Util\n  edu.stanford.smi.protege.ui.DisplayUtilities\n  ru.vrd.nmea.VRdNMEAReciever\n  ru.igis.omtab.gui.RuMapMouseAdapter\n  dk.dma.ais.sentence.Vdm\n  dk.dma.ais.message.AisMessage\n  ru.igis.ais.AIVDMProcessor)")
	(title "vr.dashcli"))

([VRDashboardClient_Class20000] of  CloVar

	(source "(atom nil)")
	(title "GPRMC"))

([VRDashboardClient_Class200000] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [VRDashboardClient_Class160000])
	(%3AANNOTATION-TEXT "Current BBXWiki Request")
	(%3ACREATION-TIMESTAMP "2021.05.10 12:10:38.095 MSK")
	(%3ACREATOR "ru"))

([VRDashboardClient_Class200006] of  CloFunction

	(source "([onb]\n  (if-let [mo (OMT/getMapOb onb)]\n    (set-wiki-coords (.getLatitude mo) (.getLongitude mo))))\n([lat lon]\n  (when-let [wc (first (cls-instances \"WikipediaControl\"))]\n    (ssv wc \"lat\" (float lat))\n    (ssv wc \"lng\" (float lon))))")
	(title "set-wiki-coords"))

([VRDashboardClient_Class200007] of  CloFunction

	(source "(let [mp (into {} hm)\n       lat (mp \"lat\")\n       lon (mp \"lng\")\n       vic (mp \"vicinity\")\n       v (/ vic 60)\n       [w s e n] [(- lon v) (- lat v) (+ lon v) (+ lat v)]]\n  (if (nil? RMMA)\n    (set-mouse-adapter2))\n  (invoke-later\n    (let [bbi (foc \"BBX\" \"title\" \"Current\")\n           rqi (fainst (cls-instances \"BBXWiki\") \"Current BBXWiki Request\")]\n      (if (and bbi rqi)\n        (do\n          (ssvs bbi \"wsen\" (vec (map float [w s e n])))\n          (ssv rqi \"bbx\" bbi)\n          (ssvs rqi \"responses\" [])\n          (wig/submit-bbx (itm rqi 0) rqi)\n          (if-let [rr (seq (svs rqi \"responses\"))]\n            (doseq [r rr]\n              (pum-out-place r lat lon vic)\n              (add-pm-desc r))))\n        (println \"Instance of \\\"Current BBXWiki Request\\\" not found!\")))))")
	(title "wikipedia-scan [hm inst]"))

([VRDashboardClient_Class200008] of  CloFunction

	(source "(let [tit (sv wai \"title\")\n      la1 (sv wai \"lat\")\n      lo1 (sv wai \"lng\")\n      dis (MapOb/distanceNM lat lon la1 lo1)\n      min-scl 0.25\n      max-scl 1.25\n      scl (min max-scl (- max-scl (/ dis vic)))]\n  (cz/location tit scl \"img/arrdn.png\" la1 lo1 100 60))")
	(title "pum-out-place [wai lat lon vic]"))

([VRDashboardClient_Class200009] of  CloFunction

	(source "(if-let [pmi (fifos \"Wikimark\" \"label\" (or (sv wai \"feature\") \"default\"))]\n  (let [wmi (.copy pmi *kb* nil false)]\n    (.setDirectType wmi (cls \"Wikimark\"))\n    (ssv wmi \"latitude\" (MapOb/getDegMin (sv wai \"lat\")))\n    (ssv wmi \"longitude\" (MapOb/getDegMin (sv wai \"lng\")))\n    (ssv ins \"reference\" wia)\n    (ssv wia \"reference\" ins)))\n    (OMT/getOrAdd wmi)))")
	(title "placemark-on-map [wai]"))

([VRDashboardClient_Class20001] of  CloVar

	(source "(volatile! {})")
	(title "FLEET"))

([VRDashboardClient_Class210000] of  CloVar

	(source "nil")
	(title "RMMA"))

([VRDashboardClient_Class220000] of  NavOb

	(altitude 4)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "neighbor")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class230000] of  WikipediaControl

	(lat 36.50068)
	(lng 32.000366)
	(vicinity 10.0))

([VRDashboardClient_Class230057] of  CloFunction

	(source "(let [tit (sv wia \"title\")\n      fea (sv wia \"feature\")]\n  (if-let [mo (OMT/getMapOb tit)]\n    (.setDescription mo\n      (or (DESC-MAP fea)\n           (DESC-MAP \"default\")))))")
	(title "add-pm-desc [wia]"))

([VRDashboardClient_Class230075] of  Rule

	(lhs "(CZMLGenerator)\n?onb (Onboard label ?lab\n	time ?tim)\n(Clock0 time ?t (> ?t ?tim))")
	(rhs "(vr.dashcli/set-wiki-coords ?lab)")
	(salience 1)
	(title "vr:Set Wikipedia Coordinates"))

([VRDashboardClient_Class240000] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "NAGUICHOUPS")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class240001] of  CloFunction

	(source "(let [mp (into {} hm)]\n  (if-let [rce (mp \"selected-race\")]\n    (let [tpt (first (.split rce \"\\\\.\"))\n          tpt (+ 10000 (read-string tpt))]\n      (ssv inst \"selected-race\" rce)\n      (ru.rules/assert-instances [inst]))\n    (println \"Select race before!\")))")
	(title "start [hm inst]"))

([VRDashboardClient_Class240060] of  CloFunction

	(source "(println \"INITIALIZING EXPERT SYSTEM\")\n(println \"1. Loading Clojure Programs...\")\n(if-let [wps (ClojureTab/findAnnotated (cls-instances \"WorkingPrograms\") nil)]\n  (loop [i 1 pins (svs wps \"cloPrograms\")]\n    (when (seq pins)\n      (println (str \" 1.\" i \" \" (sv (first pins) \"title\") \" = \" (ClojureTab/loadProgram (first pins)) ))\n      (recur (inc i) (rest pins)) ) )\n  (println \"  Annotated instance of WorkingPrograms not found!\"))\n(println \"2. Define Race and Boat.\")\n(ClojureTab/invoke \"vr.dashcli\" \"ask-race-and-boat-name\")\n(println \"3. Start Expert System.\")\n(if-let [run (ClojureTab/findAnnotated (cls-instances \"Run\") nil)]\n  (ClojureTab/invoke \"ru.rules\" \"run-engine\" run)\n  (println \"  Annotated instance of Run not found!\"))\n(println \"4. Start Time.\")\n(OMT/setTimerRunning true)\n(println \"EXPERT SYSTEM INITIALIZED AND STARTED\")")
	(title "clojure-work []"))

([VRDashboardClient_Class240061] of  CloNamespace

	(source "(:use protege.core)\n(:import \n  clojuretab.ClojureTab\n  ru.igis.omtab.OMT)")
	(title "menu.item"))

([VRDashboardClient_Class240720] of  CloFunction

	(source "(let [rmma (proxy [RuMapMouseAdapter] []\n	(mouseRightButtonClickedOn [mo llp runa]\n                            (if mo\n                              (if-let [art (sv (.getInstance mo) \"reference\")]\n                                (let [wc (first (cls-instances \"WikipediaControl\"))\n                                      lat (sv wc \"lat\")\n                                      lon (sv wc \"lng\")\n                                      vic (sv wc \"vicinity\")]\n                                  (pum-out-place art lat lon vic)\n                                  (.show *prj* art))))\n	  true))\n       pgs (seq (OMT/getPlaygrounds))]\n  (.setRuMapMouseAdapter (first pgs) rmma)\n  rmma)")
	(title "set-mouse-adapter2 []"))

([VRDashboardClient_Class250000] of  CloFuncall

	(source "(OMT/getMapOb \"Bylina\")"))

([VRDashboardClient_Class250001] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "GUYOT ENVIRONNEMENT")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class250002] of  CloFuncall

	(source "(ru.rules/dr)"))

([VRDashboardClient_Class250016] of  CloVar

	(source "{\"default\" \"{:gltf-url \\\"models/piramida/scene.gltf\\\"}\"}")
	(title "DESC-MAP"))

([VRDashboardClient_Class260000] of  CloVar

	(source "(volatile! [])")
	(title "ART"))

([VRDashboardClient_Class260002] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "BIOTHERM SAILING TEA")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class260003] of  CesiumView

	(status "START"))

([VRDashboardClient_Class270000] of  CloFuncall

	(source "("))

([VRDashboardClient_Class270001] of  Rule

	(lhs "(VRDashboardControl onboard ?onb \n	visibility ?vis \n	selected-race ?ser)\n(NMEAControl status \"RUN\"\n	delay ?del)\n?d (NMEAData object ?obj\n	time ?t0)\n?cv (CesiumView status ?cesium-status)\n(Clock0 time ?t1 (> ?t1 ?t0))")
	(rhs "(future (vr.dashcli/get-external-data (str \"NMEA_CACHE/\" ?ser \"/GPRMC.txt\") vr.dashcli/GPRMC))\n(when-let [[tim lat lon spd crs dat :as bdata] (vr.dashcli/get-boat-data)]\n  (when-let [mo (ru.igis.omtab.OMT/getOrAdd ?obj)]\n    (.setLatitude mo lat)\n    (.setLongitude mo lon)\n    (.setCourse mo (int crs))\n    (.setSpeed mo spd)\n    (println \"boat:\" (protege.core/sv ?obj \"label\") bdata))\n  (vr.dashcli/get-external-data (str \"NMEA_CACHE/\" ?ser \"/AIVDM.txt\") vr.dashcli/AIVDM)\n  (vr.dashcli/get-fleet-data)\n  (vr.dashcli/show-neighbors ?onb ?vis)\n  (vr.dashcli/unvisible-offmap ?onb)\n  (when (= ?cesium-status \"START\")\n    (light.pro.server/start-server)\n    (modify ?cv status \"SERVER\")))\n(cond \n  (= ?cesium-status \"SERVER\") (do (light.pro.server/start-client) (modify ?cv status \"CLIENT\"))\n  (= ?cesium-status \"CLIENT\") (do (light.pro.server/go-onboard ?onb) (modify ?cv status \"ONBOARD\")))\n(modify ?d time (+ ?t1 ?del))")
	(salience 0)
	(title "vr:NMEA Run"))

([VRDashboardClient_Class270003] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "JULIUS_")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270004] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "FABOU62")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270005] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "11TH HOUR RACING TEA")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270006] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "BUDDHA BSP")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270007] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "TEAM MALIZIA - GALER")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270008] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "FSR NAN")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270009] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "HOLCIM - PRB - NICO_")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270010] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "PTITLOUDEMERS")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270011] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "TEAM MALIZIA - KOKY")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270012] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "DAMA - LDLN")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270013] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "JONJON35")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270014] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "GENOT")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270015] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "TIBMW")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270016] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "PIER123 - BSP")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270017] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "JP51")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270018] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "GAVIA IMMER")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270019] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "CSOKIBABA")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270020] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "FIREMAN321")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270021] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "SPACE TRANBER")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270022] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "LA GARDECHE")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270023] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "HOLCIM - PRB - FRANK")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270024] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "HAPPY TALK")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270025] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "PINGPONG31")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270026] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "FREEMAN27")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270027] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "KIBELL44")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270028] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "LULULEX")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270029] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "GUEST_1667547442445")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270030] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 2\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/frigate/scene.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "FRIGATE")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/tanker.gif")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270031] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "LAMIECALINE")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class270032] of  VRFleet

	(altitude 0)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "MARCUSBELGICUS-BSP")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class280000] of  CloFunction

	(source "(if (.exists (io/file path))\n  (let [buf (slurp path)]\n    (if (not (empty? buf))\n      (reset! atm (.split buf END-TOKEN)))))")
	(title "get-external-data [path atm]"))

([VRDashboardClient_Class280001] of  NMEAData

	(object [VRDashboardClient_Class110003])
	(time 0))

([VRDashboardClient_Class280012] of  CloFunction

	(source "(letfn [(to-map [s]\n             (let [s (.substring s 1 (dec (count s)))\n                    s (.split s \" \")\n                    s (remove #(.startsWith % \"pos\") s)\n                    s (remove #(.startsWith % \"=\") s)\n                    s (remove #(.startsWith % \"(\") s)\n                    s (apply str s)\n                    s (.replaceAll s \"=\" \" \")\n                    s (str \"{\" s \"}\")]   \n               (read-string s)))]\n  (if (.startsWith aivdm \"!AIVDM\")\n    (try\n      (let [vdm (Vdm.)\n             _ (.parse vdm aivdm)\n             mes (AisMessage/getInstance vdm)\n             pos (.getValidPosition mes)\n             tos (.toString mes)\n             mp (to-map tos)\n             mp (assoc mp 'pos [(.getLatitude pos) (.getLongitude pos)])\n             imo (mp 'userId)]\n        (vswap! FLEET assoc imo (merge mp (@FLEET imo))))\n      (catch Exception e\n        (let [lio (.lastIndexOf aivdm \"*\")]\n          (when (= (.substring aivdm (dec lio) lio) \"4\")\n            (AIVDMProcessor/process aivdm)\n            (let [imo (AIVDMProcessor/getIMO)\n                   snm (AIVDMProcessor/getShipName)]\n              (vswap! FLEET assoc imo (assoc (@FLEET imo) 'name snm))) ))) )))")
	(title "parse-AIVDM [aivdm]"))

([VRDashboardClient_Class290000] of  CloFuncall

	(source "ART"))

([VRDashboardClient_Class290001] of  CloFunction

	(source "(if (.exists (io/file path))\n  (spit path \"\"))")
	(title "clear-external-data [path]"))

([VRDashboardClient_Class290002] of  CloFunction

	(source "(let [cmd (str \"php -S \" uri \" \" path)\n      proc (Runtime/getRuntime)]\n (println :CMD cmd)\n (println (future (.exec proc cmd)))\n (println \",,\"))")
	(title "start-router-slava [uri path]"))

([VRDashboardClient_Class290010] of  CloFunction

	(source "(doseq [nmea @AIVDM]\n  (parse-AIVDM nmea))")
	(title "get-fleet-data []"))

([VRDashboardClient_Class290011] of  CloVar

	(source "(atom nil)")
	(title "AIVDM"))

([VRDashboardClient_Class30000] of  Rule

	(lhs "(CZMLGenerator delay ?del\n	visibility ?vis)\n(Onboard label ?onb)\n?cs (CZMLSpan time ?tim\n	object ?obj\n	options ?ops)\n(Clock0 time ?t ((not= ?obj ?onb)\n                       (> ?t ?tim)))")
	(rhs "(if-let [omo (ru.igis.omtab.OMT/getMapOb ?onb)]\n  (if-let [nmo (ru.igis.omtab.OMT/getMapOb ?obj)]\n    (let [dis (.distanceNM omo nmo)]\n      (if (< dis ?vis)\n        (light.cesium.core/model-leg \n	nmo\n	(+ ?del 2)\n	(read-string (.getDescription nmo))))\n      (modify ?cs time (+ ?t ?del)))))")
	(salience 1)
	(title "czm0:CZML Navob Leg Generation2"))

([VRDashboardClient_Class300002] of  CloFuncall

	(source "(rete/facts)"))

([VRDashboardClient_Class300003] of  CloFuncall

	(source "(rr/sp :all)"))

([VRDashboardClient_Class30001] of  CloVar

	(source "\"\\r\\n\"")
	(title "END-TOKEN"))

([VRDashboardClient_Class30006] of  CloFunction

	(source "(if (some? data)\n  (try\n    (let [d (.split data \",\")]\n      (if (>= (count d) 10)\n        (let [[_ time sts lat1 lat2 lon1 lon2 spd crs date] d]\n          [time\n           (parse-coord lat1 lat2)\n           (parse-coord lon1 lon2)\n           (round-speed (read-string spd))\n           (read-string crs)\n           date])))\n  (catch Exception e\n    (println :gprmc-data :FAILURE)\n    nil)))")
	(title "parse-gprmc-data [data]"))

([VRDashboardClient_Class30019] of  CloFunction

	(source "(let [c (read-string c1)\n      mf (- c (int c))\n      dm (/ (int c) 100)\n      d (int dm)\n      m (int (* (- dm d) 100))\n      m (+ m mf)\n      d (if (or (= c2 \"S\") (= c2 \"W\")) (str \"-\" d) d)]\n  (MapOb/getDeg (str d \" \" m)))")
	(title "parse-coord [c1 c2]"))

([VRDashboardClient_Class30059] of  CloVar

	(source "(def BOAT-DATA [0 0 0 0 0 0])")
	(title "defBOAT-DATA"))

([VRDashboardClient_Class30064] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class100005]
		[igis_Class100000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class90000]
		[igis_Class21]
		[igis_Class22]
		[igis_Class23]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30]
		[igis_Class2])
	(Debug "FINE")
	(label "VR Chart")
	(Latitude "46.7")
	(layers
		[igis_Class40012]
		[igis_Class110000]
		[NiceSPb_Class130000]
		[NiceSPb_Class160725]
		[igis_Class1]
		[NiceSPb_Class160726]
		[NiceSPb_Class160727]
		[igis_Class40011]
		[igis_Class80004]
		[igis_Class80000]
		[igis_Class80001]
		[igis_Class80003]
		[igis_Class80002])
	(Longitude "-2.5")
	(Scale "50000000")
	(startUpLayers
		[igis_Class40012]
		[NiceSPb_Class160727]
		[igis_Class40011]))

([VRDashboardClient_Class30065] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [VRDashboardClient_Class30064])
	(%3ACREATION-TIMESTAMP "2021.04.21 13:52:10.310 MSK")
	(%3ACREATOR "ru"))

([VRDashboardClient_Class30069] of  NMEAControl

	(delay 60)
	(status "START"))

([VRDashboardClient_Class30073] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-retr-inss "Retract Instances/ru.rules/retr-inss")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(facts
		[VRDashboardClient_Class30069]
		[VRDashboardClient_Class280001]
		[VRDashboardClient_Class10005]
		[VRDashboardClient_Class70009]
		[VRDashboardClient_Class260003]
		[VRDashboardClient_Class50001])
	(instances [VRDashboardClient_Class30069])
	(mode run)
	(rule-sets
		[VRDashboardClient_Class30074]
		[VRDashboardClient_Class40001])
	(steps 1)
	(title "VRRun"))

([VRDashboardClient_Class30074] of  RuleSet

	(rules
		[VRDashboardClient_Class230075]
		[VRDashboardClient_Class30076]
		[VRDashboardClient_Class30077]
		[VRDashboardClient_Class80000]
		[VRDashboardClient_Class100000])
	(templates
		[NMEAControl]
		[NMEAData]
		[VRDashboardControl]
		[Onboard]
		[Clock0]
		[CesiumView])
	(title "VR Rules"))

([VRDashboardClient_Class30075] of  NavOb

	(altitude 4)
	(course 0)
	(description "{:draft 2\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/frigate/scene.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "frigate0")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/tanker.gif")
	(verticalSpeed 0.0))

([VRDashboardClient_Class30076] of  Rule

	(lhs "(VRDashboardControl nmea-port ?nmp selected-race ?ser)\n?c (NMEAControl status \"START\"\n	delay ?del)\n?d (NMEAData object ?obj)\n(Clock0 time ?t)")
	(rhs "(println \"NMEA Start boat\" (protege.core/sv ?obj \"label\"))\n(vr.dashcli/clear-external-data (str \"NMEA_CACHE/\" ?ser \"/GPRMC.txt\"))\n(vr.dashcli/clear-external-data (str \"NMEA_CACHE/\" ?ser \"/AIVDM.txt\"))\n(when-let [mo (ru.igis.omtab.OMT/getOrAdd ?obj)]\n  (modify ?d data [\"\"\n                          (.getLatitude mo)\n                          (.getLongitude mo)\n                          (.getCourse mo)\n                          (.getSpeed mo)\n                          \"\"]\n                  time ?t)\n  (modify ?c status \"RUN\")\n  (if (nil? light.sim/ES-TIMER)\n    (light.sim/start-sim)))")
	(salience 0)
	(title "vr:NMEA Start"))

([VRDashboardClient_Class30077] of  Rule

	(lhs "(VRDashboardControl onboard ?onb \n	visibility ?vis \n	selected-race ?ser)\n(NMEAControl status \"RUN\"\n	delay ?del)\n?d (NMEAData object ?obj\n	time ?t0)\n?cv (CesiumView status ?cesium-status)\n(Clock0 time ?t1 (> ?t1 ?t0))")
	(rhs "(future (vr.dashcli/get-external-data (str \"NMEA_CACHE/\" ?ser \"/GPRMC.txt\") vr.dashcli/GPRMC))\n(when-let [[tim lat lon spd crs dat :as bdata] (vr.dashcli/get-boat-data)]\n  (when-let [mo (ru.igis.omtab.OMT/getOrAdd ?obj)]\n    (.setLatitude mo lat)\n    (.setLongitude mo lon)\n    (.setCourse mo (int crs))\n    (.setSpeed mo spd)\n    (println \"boat:\" (protege.core/sv ?obj \"label\") bdata))\n  (vr.dashcli/get-external-data (str \"NMEA_CACHE/\" ?ser \"/AIVDM.txt\") vr.dashcli/AIVDM)\n  (vr.dashcli/get-fleet-data)\n  (vr.dashcli/show-neighbors ?onb ?vis)\n  (vr.dashcli/unvisible-offmap ?onb)\n  (when (= ?cesium-status \"START\")\n    (light.pro.server/start-server)\n    (light.pro.server/start-client) \n    (light.pro.server/go-onboard ?onb) \n    (modify ?cv status \"ONBOARD\")))\n(modify ?d time (+ ?t1 ?del))")
	(salience 0)
	(title "vr:NMEA Run"))

([VRDashboardClient_Class310001] of  CloFuncall

	(source "(seq @AIDVM)"))

([VRDashboardClient_Class310002] of  CloFuncall

	(source "(seq @GPRMC)"))

([VRDashboardClient_Class320000] of  CloFuncall

	(source "(rr/pp :all)"))

([VRDashboardClient_Class350003] of  CloFuncall

	(source "(invoke-later (ask-race-and-boat-name))"))

([VRDashboardClient_Class40000] of  CloVar

	(source "(volatile! [])")
	(title "ONMAP"))

([VRDashboardClient_Class40001] of  RuleSet

	(rules
		[CeziumEngineLight_Class40022]
		[VRDashboardClient_Class30000]
		[CeziumEngineLight_Class40005]
		[CeziumEngineLight_Class40006]
		[CeziumEngineLight_Class40007])
	(templates
		[Clock0]
		[CZMLGenerator]
		[CZMLSpan]
		[Onboard]
		[MapObEvent0])
	(title "CZML Generation Set2"))

([VRDashboardClient_Class50000] of  CloProgram

	(cloFunctions
		[VRDashboardClient_Class80004]
		[VRDashboardClient_Class120000]
		[VRDashboardClient_Class120001])
	(cloNamespace [VRDashboardClient_Class60001])
	(title "TCP Server"))

([VRDashboardClient_Class50001] of  VRDashboardControl

	(nmea-port "8081")
	(onboard "russor")
	(port "8448")
	(races
		"595.1"
		"567.1"
		"573.2"
		"512.7")
	(selected-race "595.1")
	(telnet-port "10470")
	(visibility 40.0)
	(wikipedia_control [VRDashboardClient_Class230000]))

([VRDashboardClient_Class60000] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 30\n  :label\n    {:scale 0.6\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/air_carrier/111.glb\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "CVN-69")
	(latitude "0 0")
	(longitude "0 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/lnrR.gif")
	(verticalSpeed 0.0))

([VRDashboardClient_Class60001] of  CloNamespace

	(source "(:require \n  [clojure.java.io :as io])\n(:import \n  [java.net ServerSocket])")
	(title "tcp.server"))

([VRDashboardClient_Class60003] of  CloFunction

	(source "(let [s (* s 100)\n       s (Math/round s)]\n  (double (/ s 100)))")
	(title "round-speed [s]"))

([VRDashboardClient_Class70000] of  CloFunction

	(source "(let [vpt (keyword (clojure.string/lower-case vpt))]\n  (println :UW vel vof vpt)\n  (assoc ops :view-elevation vel\n                   :view-offset vof\n                   :view-post vpt))")
	(title "update-view [ops vel vof vpt]"))

([VRDashboardClient_Class70001] of  NavOb

	(altitude 150)
	(course 0)
	(description "{:draft 10\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/helicopter/scene.gltf\"\n      :scale 2.0\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "h1")
	(latitude "0 0")
	(longitude "0 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/helr.gif")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70002] of  NavOb

	(altitude 85)
	(course 0)
	(description "{:draft 10\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/idf-_plain/scene.gltf\"\n      :scale 0.2\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "i1")
	(latitude "0 0")
	(longitude "0 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/plnr.gif")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70003] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Vela")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtp.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70004] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Mars")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtr.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70005] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Diana")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtk.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70006] of  NavOb

	(altitude 2)
	(course 0)
	(description "{:draft 6\n  :label\n    {:scale 0.3\n     :pixelOffset {:cartesian2 [0.0 -40.0]}\n     :heightReference \"NONE\"}\n  :model \n    {:gltf \"models/sailboat/1368 Sailboat.gltf\"\n      :heightReference \"RELATIVE_TO_GROUND\"}}")
	(label "Argo")
	(latitude "60 0")
	(longitude "30 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:resources/public/img/yachtg.png")
	(verticalSpeed 0.0))

([VRDashboardClient_Class70009] of  Onboard

	(label "Bylina")
	(time 0)
	(view 0))

([VRDashboardClient_Class80000] of  Rule

	(lhs "(CZMLGenerator)\n(MapObEvent0 status \"ADDED\"\n	object ?obj\n	label ?lab\n                      (= (.getName (class ?obj)) \"ru.igis.omtab.NavOb\"))\n(Clock0 time ?t)\n(not CZMLSpan object ?lab)")
	(rhs "(asser CZMLSpan object ?lab\n	time ?t)\n(println \"NavOb on map:\" ?lab)")
	(salience 0)
	(title "vr:NavOb on Map"))

([VRDashboardClient_Class80001] of  CloFunction

	(source "(doseq [no (OMT/getNavObInstances)]\n  (let [nam (sv no \"label\")]\n    (if (and (not= nam onb) \n          (not (some #{nam} @ART))\n          (not (some #{nam} @ONMAP)))\n      (OMT/removeMapOb no false))))")
	(title "unvisible-offmap [onb]"))

([VRDashboardClient_Class80002] of  CloFunction

	(source "(VRdNMEAReciever/startServer port path) \n(Thread/sleep 30000)\n(let [buf (VRdNMEAReciever/getBuffer)]\n  (when (> (.capacity buf) 16)\n    (reset! NMEA (.split (.toString buf) END-TOKEN))\n    (VRdNMEAReciever/clearBuffer)))\n(VRdNMEAReciever/stopServer 10)\n(if NMEA-FLAG\n  (get-external-data port path))")
	(title "get-external-data [port path]"))

([VRDashboardClient_Class80004] of  CloFunction

	(source ";; Read a line of textual data from the given socket\n(.readLine (io/reader socket))")
	(title "receive [socket]"))

([VRDashboardClient_Class90000] of  CloVar

	(source "\"http://zezo.org/races2.json\"")
	(title "RACES-URL"))

([VRDashboardClient_Class90001] of  CloFunction

	(source "(if-let [bd  (parse-gprmc-data (first @GPRMC))]            \n  (when (diff-time? bd BOAT-DATA)\n    (def BOAT-DATA bd)\n    bd))")
	(title "get-boat-data []"))

([VRDashboardClient_Class90005] of  CloFunction

	(source "(let [txt (slurp RACES-URL)\n      mp (json/parse-string txt)\n      rcs (map #(get % \"id\") (mp \"races\"))\n      vrd (first (cls-instances \"VRDashboardControl\"))\n      sel (DisplayUtilities/pickSymbol nil \"Select race\" \"\" rcs)]\n  (ssvs vrd \"races\" rcs)\n  (ssv vrd \"selected-race\" sel))")
	(title "load-races []"))
